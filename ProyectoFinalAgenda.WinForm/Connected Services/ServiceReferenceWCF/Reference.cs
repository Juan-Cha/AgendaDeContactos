//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoFinalAgenda.WinForm.ServiceReferenceWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contacto", Namespace="http://schemas.datacontract.org/2004/07/ProyectoFinalAgenda.Models")]
    [System.SerializableAttribute()]
    public partial class Contacto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DireccionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direccion {
            get {
                return this.DireccionField;
            }
            set {
                if ((object.ReferenceEquals(this.DireccionField, value) != true)) {
                    this.DireccionField = value;
                    this.RaisePropertyChanged("Direccion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefono {
            get {
                return this.TelefonoField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonoField, value) != true)) {
                    this.TelefonoField = value;
                    this.RaisePropertyChanged("Telefono");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceWCF.IAgendaContactosService")]
    public interface IAgendaContactosService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaContactosService/DoWork", ReplyAction="http://tempuri.org/IAgendaContactosService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaContactosService/DoWork", ReplyAction="http://tempuri.org/IAgendaContactosService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaContactosService/GetContactos", ReplyAction="http://tempuri.org/IAgendaContactosService/GetContactosResponse")]
        ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto[] GetContactos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaContactosService/GetContactos", ReplyAction="http://tempuri.org/IAgendaContactosService/GetContactosResponse")]
        System.Threading.Tasks.Task<ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto[]> GetContactosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaContactosService/GetContactoPorId", ReplyAction="http://tempuri.org/IAgendaContactosService/GetContactoPorIdResponse")]
        ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto GetContactoPorId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaContactosService/GetContactoPorId", ReplyAction="http://tempuri.org/IAgendaContactosService/GetContactoPorIdResponse")]
        System.Threading.Tasks.Task<ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto> GetContactoPorIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaContactosService/AgregarContacto", ReplyAction="http://tempuri.org/IAgendaContactosService/AgregarContactoResponse")]
        void AgregarContacto(ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaContactosService/AgregarContacto", ReplyAction="http://tempuri.org/IAgendaContactosService/AgregarContactoResponse")]
        System.Threading.Tasks.Task AgregarContactoAsync(ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaContactosService/EditarContacto", ReplyAction="http://tempuri.org/IAgendaContactosService/EditarContactoResponse")]
        void EditarContacto(ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaContactosService/EditarContacto", ReplyAction="http://tempuri.org/IAgendaContactosService/EditarContactoResponse")]
        System.Threading.Tasks.Task EditarContactoAsync(ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaContactosService/EliminarContacto", ReplyAction="http://tempuri.org/IAgendaContactosService/EliminarContactoResponse")]
        void EliminarContacto(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaContactosService/EliminarContacto", ReplyAction="http://tempuri.org/IAgendaContactosService/EliminarContactoResponse")]
        System.Threading.Tasks.Task EliminarContactoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaContactosService/BuscarContactosPorNombre", ReplyAction="http://tempuri.org/IAgendaContactosService/BuscarContactosPorNombreResponse")]
        ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto[] BuscarContactosPorNombre(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgendaContactosService/BuscarContactosPorNombre", ReplyAction="http://tempuri.org/IAgendaContactosService/BuscarContactosPorNombreResponse")]
        System.Threading.Tasks.Task<ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto[]> BuscarContactosPorNombreAsync(string nombre);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAgendaContactosServiceChannel : ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.IAgendaContactosService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AgendaContactosServiceClient : System.ServiceModel.ClientBase<ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.IAgendaContactosService>, ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.IAgendaContactosService {
        
        public AgendaContactosServiceClient() {
        }
        
        public AgendaContactosServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AgendaContactosServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgendaContactosServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgendaContactosServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto[] GetContactos() {
            return base.Channel.GetContactos();
        }
        
        public System.Threading.Tasks.Task<ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto[]> GetContactosAsync() {
            return base.Channel.GetContactosAsync();
        }
        
        public ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto GetContactoPorId(int id) {
            return base.Channel.GetContactoPorId(id);
        }
        
        public System.Threading.Tasks.Task<ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto> GetContactoPorIdAsync(int id) {
            return base.Channel.GetContactoPorIdAsync(id);
        }
        
        public void AgregarContacto(ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto c) {
            base.Channel.AgregarContacto(c);
        }
        
        public System.Threading.Tasks.Task AgregarContactoAsync(ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto c) {
            return base.Channel.AgregarContactoAsync(c);
        }
        
        public void EditarContacto(ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto c) {
            base.Channel.EditarContacto(c);
        }
        
        public System.Threading.Tasks.Task EditarContactoAsync(ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto c) {
            return base.Channel.EditarContactoAsync(c);
        }
        
        public void EliminarContacto(int id) {
            base.Channel.EliminarContacto(id);
        }
        
        public System.Threading.Tasks.Task EliminarContactoAsync(int id) {
            return base.Channel.EliminarContactoAsync(id);
        }
        
        public ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto[] BuscarContactosPorNombre(string nombre) {
            return base.Channel.BuscarContactosPorNombre(nombre);
        }
        
        public System.Threading.Tasks.Task<ProyectoFinalAgenda.WinForm.ServiceReferenceWCF.Contacto[]> BuscarContactosPorNombreAsync(string nombre) {
            return base.Channel.BuscarContactosPorNombreAsync(nombre);
        }
    }
}
